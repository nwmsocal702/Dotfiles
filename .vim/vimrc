"-----------------Pathogen----------------
execute pathogen#infect()
syntax on
filetype plugin indent on
"-----------------------------------------

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif


" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
set hidden		" Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)
set number
set wrap                "Wrap lines visually one line text multiple lines
set textwidth=79        "Limit text width
"set colorcolumn=80      " Draw line at 80 charachters
set pastetoggle=<F2>
set nocp                " 'Compatible' is not set

set laststatus=2
set statusline=%f         " Path to the file
set statusline+=\ -\      " Separator
set statusline+=FileType: " Label
set statusline+=%y        " Filetype of the file
set t_Co=16               " Use the 16 colors terminal option
set buftype: ""
set hlsearch incsearch    " Highlight search matches
set cursorline            " Highlight current line
set wildmenu              " Visual autocomplete for menu
set lazyredraw            " redraw only when we need to

execute "set colorcolumn=" . join(range(80,335), ',')

" Autoreload vimrc file on save
augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }

"--------------Solarized theme setup-----------------
syntax on
set background=dark
colorscheme solarized

" Option name           default
"-----------------------------------
let g:solarized_termcolors= 16
let g:solarized_termtrans = 0
let g:solarized_degrade   = 0
let g:solarized_bold      = 1
let g:solarized_underline = 1
let g:solarized_italic    = 1
let g:solarized_contrast  = "normal"
let g:solarized_visibility= "normal"


"-------------Syntastic settings--------------
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 0 "location list not filled auto
let g:syntastic_auto_loc_list = 1            "auto open location list
let g:syntastic_check_on_open = 0            "Check on open
let g:syntastic_loc_list_height = 5          "Height of location list
let g:syntastic_check_on_wq = 0              "check on quitting
let g:syntastic_aggregate_errors = 1         "run all checkers and show err
let g:syntastic_id_checkers = 1              "label errors with checker name
let g:syntastic_sh_checkers = ["sh", "shellcheck", "checkbashisms"]
let g:syntastic_shell = "/bin/bash"

let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "active_filetypes": ["php", "python", "sh", "perl", "bash", "html"],
    \ "passive_filetypes": ["txt"] }
"------------------NERDTree--------------------
" autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

"------------------KEY MAPPING-----------------
nnoremap <S-F9> :!%:p<Enter>     

nnoremap <leader>ev :tabnew $MYVIMRC<CR>       " Opens vimrc for editing
nnoremap <leader>sv :source $MYVIMRC<CR>       " Sources vimrc
nnoremap <leader>nwm :e scp://matich.org//<CR>:set buftype: ""<CR>

	 
inoremap jk <esc>                              " Maps jk to escape

" Abbreviations
iabbrev @@ nikolas@matich.org
iabbrev ssig -- <CR>Nik Matich<CR>nikolas@matich.org
iabbrev ccopy Copyright 2015 Nik Matich, all rights reserved.

